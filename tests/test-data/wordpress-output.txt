{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "rest_api_compression_exists",
    "rest_api_compression_min",
    "rest_api_compression_max"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "check_default_ttl",
    "check_max_ttl",
    "ensure_default_compression_on",
    "ensure_compression_on"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "ensure_all_loggroups_have_retention"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "check_codeguru_association"
  ],
  "compliant": []
}wordpress.json Status = FAIL
FAILED rules
ec2.guard/user_data_to_AMI                        FAIL
---
{
  "name": "",
  "metadata": {},
  "status": "FAIL",
  "not_compliant": [
    {
      "Rule": {
        "name": "user_data_to_AMI",
        "metadata": {},
        "messages": {
          "custom_message": null,
          "error_message": null
        },
        "checks": [
          {
            "Clause": {
              "Unary": {
                "context": " %ec2_instances[*].Properties.UserData not EXISTS  ",
                "messages": {
                  "custom_message": "",
                  "error_message": "Check was not compliant as property [/Resources/WebServer/Properties/UserData[L:344,C:21]] existed."
                },
                "check": {
                  "Resolved": {
                    "value": {
                      "path": "/Resources/WebServer/Properties/UserData",
                      "value": {
                        "Fn::Base64": {
                          "Fn::Join": [
                            "",
                            [
                              "#!/bin/bash -xe\n",
                              "yum update -y aws-cfn-bootstrap\n",
                              "/opt/aws/bin/cfn-init -v ",
                              "         --stack ",
                              {
                                "Ref": "AWS::StackName"
                              },
                              "         --resource WebServer ",
                              "         --configsets wordpress_install ",
                              "         --region ",
                              {
                                "Ref": "AWS::Region"
                              },
                              "\n",
                              "/opt/aws/bin/cfn-signal -e $? ",
                              "         --stack ",
                              {
                                "Ref": "AWS::StackName"
                              },
                              "         --resource WebServer ",
                              "         --region ",
                              {
                                "Ref": "AWS::Region"
                              },
                              "\n"
                            ]
                          ]
                        }
                      }
                    },
                    "comparison": [
                      "Exists",
                      true
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    }
  ],
  "not_applicable": [
    "to_port_is_ssh",
    "from_port_is_ssh",
    "port_range_includes_ssh"
  ],
  "compliant": [
    "graphics_acceleration_instead_of_gpu"
  ]
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "emr_target_spot_config_configured",
    "emr_use_spot"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "check_glue_job_timeout",
    "check_glue_job_allocatedcapacity",
    "check_glue_job_workernodes",
    "check_glue_job_maxcapacity"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "check_graviton_instance_usage_in_rds",
    "check_graviton_architecture_usage_in_lambda"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "check_rds_performanceinsights_enabled"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "ensure_all_buckets_have_lifecycle_configuration"
  ],
  "compliant": []
}{
  "name": "",
  "metadata": {},
  "status": "SKIP",
  "not_compliant": [],
  "not_applicable": [
    "iamuserpassword"
  ],
  "compliant": []
}